@page "/meeting/{MeetingId}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using VideoConferenceApp.Shared.Meeting.Responses

@layout DashboardLayout
@attribute [Authorize]

<div class="row" style="opacity: @PageOpacity">
	<div class="col-lg-12 card border-0">
		<div class="card-body video-conference-container" id="@ContainerId"></div>
	</div>
</div>


@code {
	int PageOpacity = 0;
	bool ShowLoader = false;
	bool IsMessageModalOpen = false;
	string Message = string.Empty;
	string ContainerId = "host-video-container";

	[Parameter] 
	public string MeetingId { get; set; } = string.Empty;

	[CascadingParameter]
	Task<AuthenticationState>? AuthState { get; set; }

	protected override void OnParametersSet()
	{
		if (string.IsNullOrEmpty(MeetingId))
		{
			NavManager.NavigateTo("/dashboard");
		}
	}

	protected async override Task OnInitializedAsync()
	{
		ShowLoader = true;
		// Get username
		var user = (await AuthState!).User;
		string name = user.Claims.FirstOrDefault(_ => _.Type == ClaimTypes.Name)!.Value;

		// Get meeting token
		TwilioServiceResponse? response = await twilioService.GenerateMeetingToken(name, MeetingId);
		if (!response.IsSuccess)
		{
			// Display message if error occured
			Message = response.Message!;
			IsMessageModalOpen = true;
			ShowLoader = false;
			return;
		}

		// Start twilio meeting
		await twilioService.JoinMeeting(token: response.Data, roomName: MeetingId, containerId: ContainerId);
		ShowLoader = false;
		PageOpacity = 1;
	}

	void Ok()
	{
		IsMessageModalOpen = false;
	}
}
